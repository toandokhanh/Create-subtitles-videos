for i in range(0, len(frequency_preprocessed)):
    single_sample_processed = []
    if in_flag == 32:
        single_sample_processed.append(np.mean(frequency_preprocessed[i][:1 * len(frequency_preprocessed[i]) // 64]))
        single_sample_processed.append(np.mean(frequency_preprocessed[i][1 * len(frequency_preprocessed[i]) // 64:2 * len(frequency_preprocessed[i]) // 64]))
        single_sample_processed.append(np.mean(frequency_preprocessed[i][2 * len(frequency_preprocessed[i]) // 64:3 * len(frequency_preprocessed[i]) // 64]))
        single_sample_processed.append(np.mean(frequency_preprocessed[i][3 * len(frequency_preprocessed[i]) // 64:4 * len(frequency_preprocessed[i]) // 64]))
        single_sample_processed.append(np.mean(frequency_preprocessed[i][4 * len(frequency_preprocessed[i]) // 64:5 * len(frequency_preprocessed[i]) // 64]))
        single_sample_processed.append(np.mean(frequency_preprocessed[i][5 * len(frequency_preprocessed[i]) // 64:6 * len(frequency_preprocessed[i]) // 64]))
        single_sample_processed.append(np.mean(frequency_preprocessed[i][6 * len(frequency_preprocessed[i]) // 64:7 * len(frequency_preprocessed[i]) // 64]))
        single_sample_processed.append(np.mean(frequency_preprocessed[i][7 * len(frequency_preprocessed[i]) // 64:8 * len(frequency_preprocessed[i]) // 64]))
        single_sample_processed.append(np.mean(frequency_preprocessed[i][8 * len(frequency_preprocessed[i]) // 64:9 * len(frequency_preprocessed[i]) // 64]))
        single_sample_processed.append(np.mean(frequency_preprocessed[i][9 * len(frequency_preprocessed[i]) // 64:10 * len(frequency_preprocessed[i]) // 64]))
        single_sample_processed.append(np.mean(frequency_preprocessed[i][10 * len(frequency_preprocessed[i]) // 64:11 * len(frequency_preprocessed[i]) // 64]))
        single_sample_processed.append(np.mean(frequency_preprocessed[i][11 * len(frequency_preprocessed[i]) // 64:12 * len(frequency_preprocessed[i]) // 64]))
        single_sample_processed.append(np.mean(frequency_preprocessed[i][12 * len(frequency_preprocessed[i]) // 64:13 * len(frequency_preprocessed[i]) // 64]))
        single_sample_processed.append(np.mean(frequency_preprocessed[i][13 * len(frequency_preprocessed[i]) // 64:14 * len(frequency_preprocessed[i]) // 64]))
        single_sample_processed.append(np.mean(frequency_preprocessed[i][14 * len(frequency_preprocessed[i]) // 64:15 * len(frequency_preprocessed[i]) // 64]))
        single_sample_processed.append(np.mean(frequency_preprocessed[i][15 * len(frequency_preprocessed[i]) // 64:16 * len(frequency_preprocessed[i]) // 64]))
        single_sample_processed.append(np.mean(frequency_preprocessed[i][16 * len(frequency_preprocessed[i]) // 64:17 * len(frequency_preprocessed[i]) // 64]))
        single_sample_processed.append(np.mean(frequency_preprocessed[i][17 * len(frequency_preprocessed[i]) // 64:18 * len(frequency_preprocessed[i]) // 64]))
        single_sample_processed.append(np.mean(frequency_preprocessed[i][18 * len(frequency_preprocessed[i]) // 64:19 * len(frequency_preprocessed[i]) // 64]))
        single_sample_processed.append(np.mean(frequency_preprocessed[i][19 * len(frequency_preprocessed[i]) // 64:20 * len(frequency_preprocessed[i]) // 64]))
        single_sample_processed.append(np.mean(frequency_preprocessed[i 